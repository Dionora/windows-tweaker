<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
	<!-- Resource dictionary entries should be defined here. -->

    <LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.542,0.694" StartPoint="0.049,0.081">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.366" CenterX="0.408" ScaleY="1.29" ScaleX="1.19"/>
                <SkewTransform AngleY="0" AngleX="0" CenterY="0.366" CenterX="0.408"/>
                <RotateTransform Angle="0" CenterY="0.366" CenterX="0.408"/>
                <TranslateTransform X="0.069" Y="0.106"/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="Black" Offset="1"/>
        <GradientStop Color="#FF003744"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabPanelBackgroundBrush" Color="#5A4EBEEC"/>
    <SolidColorBrush x:Key="GroupBoxForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="TextForegroundBrush" Color="#FFF3FFFF"/>
    <SolidColorBrush x:Key="HeaderTextForegroundBrush" Color="#FFF8FFE3"/>
    <SolidColorBrush x:Key="BlueShadeBackgroundBrush" Color="#FF003543"/>
    <SolidColorBrush x:Key="GreenYellowShadeBackgroundBrush" Color="#B198CC3C"/>

    <SolidColorBrush x:Key="TabItem_TextBrush_Unselected" Color="#FFE7D6E3" />
    <SolidColorBrush x:Key="TabItem_TextBrush_Disabled" Color="Brown" />
    <SolidColorBrush x:Key="TabItem_TextBrush_Hover" Color="#88A6C840" />
    <SolidColorBrush x:Key="TabItem_TextBrush_Selected" Color="#FFA6C840" />


    <Style TargetType="{x:Type Image}">
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Margin" Value="6,2"></Setter>
    </Style>
    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="LightSteelBlue"></Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="CheckBoxFillNormal"
                     Color="#F4F4F4"/>
    <SolidColorBrush x:Key="CheckBoxStroke"
                     Color="#8E8F8F"/>

    <Style x:Key="{x:Type CheckBox}"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="5,2"></Setter>
        <Setter Property="Foreground"
                Value="#FFF3FFFF"/>
        <Setter Property="Background"
                Value="{StaticResource CheckBoxFillNormal}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" 
                                     SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <theme:BulletChrome Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                RenderPressed="{TemplateBinding IsPressed}"
                                                IsChecked="{TemplateBinding IsChecked}"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding"
                                    Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type RadioButton}"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Margin" Value="5,2"></Setter>
        <Setter Property="Foreground"
                Value="#FFF3FFFF"/>
        <Setter Property="Background"
                Value="#F4F4F4"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <theme:BulletChrome Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                IsRound="true"
                                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                RenderPressed="{TemplateBinding IsPressed}"
                                                IsChecked="{TemplateBinding IsChecked}"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding"
                                    Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5,2"></Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
    </Style>
    
    <Style TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="3"></Setter>
    </Style>
    
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Padding" Value="6,4"></Setter>
    </Style>
    
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel IsItemsHost="True"/>
                        <ContentPresenter ContentSource="SelectedContent" Margin="5,10,5,0" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>	
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Margin" Value="5,0,5,0"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Height="35" VerticalAlignment="Bottom">
                            <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="0"
                                          RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="90" />
                            <Setter Property="TextBlock.Foreground" 
                                Value="{StaticResource TabItem_TextBrush_Unselected}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Panel.ZIndex" Value="80" />
                            <Setter Property="TextBlock.Foreground" 
                                Value="{StaticResource TabItem_TextBrush_Disabled}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="99" />
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource TabItem_TextBrush_Hover}" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="TextBlock.Foreground" 
                                Value="{StaticResource TabItem_TextBrush_Selected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="BorderColorBrush" Color="#FF36B5E7"></SolidColorBrush>
    <SolidColorBrush x:Key="BorderBackgroundBrush" Color="#FF1C677F"></SolidColorBrush>
    <SolidColorBrush x:Key="BorderColorBrushGreen" Color="#FFF3FFFF"></SolidColorBrush>
    <SolidColorBrush x:Key="BorderBackgroundBrushGreen" Color="#D198CC3C"></SolidColorBrush>
    
    <Style TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" BorderBrush="{StaticResource BorderColorBrush}" BorderThickness="2" TextBlock.Foreground="White" 
                            Background="{StaticResource BorderBackgroundBrush}">
                        <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#AA1C677F"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="MistyRose"></Setter>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="Gray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>                
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="5,2"></Setter>
        <Setter Property="Padding" Value="5,2"></Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
    </Style>

    <Style x:Key="LargeButtons" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" BorderBrush="{StaticResource BorderColorBrush}" BorderThickness="2" TextBlock.Foreground="White" 
                            Background="{StaticResource BorderBackgroundBrush}">
                        <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#AA1C677F"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="MistyRose"></Setter>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="Gray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="5,2"></Setter>
        <Setter Property="Padding" Value="50,5"></Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
    </Style>

    <!--<Style x:Key="GreenButtons" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" BorderBrush="{StaticResource BorderColorBrushGreen}" BorderThickness="2" TextBlock.Foreground="White" 
                            Background="{StaticResource BorderBackgroundBrushGreen}">
                        <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF98CC3C"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="MistyRose"></Setter>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="Gray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>                
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="5,2"></Setter>
        <Setter Property="Padding" Value="5,2"></Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
    </Style>-->
    
    <Style x:Key="MenuButtons" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" TextBlock.Foreground="White" Background="{StaticResource BorderBackgroundBrush}" CornerRadius="3">
                        <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#AA1C677F"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="MistyRose"></Setter>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="Gray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>